datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@database:5432/postgres"
  default  = true
}

generator photon {
  provider = "photonjs"
}

model User {
  id                   String     @default(cuid()) @id @unique
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  email                String     @unique
  firstName            String?
  lastName             String?
  password             String?
  resetToken           String?
  resetTokenExpiry     Int?
  sites                UserSite[]
  plan                 Plan
  stripeSubscriptionId String?    @unique
  stripeCustomerId     String?    @unique
  creditsRemaining     Int        @default(0)
}

model Plan {
  id              String   @default(cuid()) @id @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String?  @unique
  level           Int      @unique
  subscribers     User[]
  creditsPerMonth Int      @default(0)
  stripePlanId    String?  @unique
}

model UserSite {
  id               String   @default(cuid()) @id @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  associatesApiKey String?
  contentSelector  String?
  user             User
  site             Site
  minimumReview    Float?
  reports          Report[]
  runningReport    Boolean
}

model Site {
  id         String     @default(cuid()) @id @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  hostname   String     @unique
  pages      Page[]
  userSites  UserSite[]
  sitemapUrl String?
}

model Page {
  id        String   @default(cuid()) @id @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String   @unique
  pageTitle String?
  wordCount Int?
  links     Link[]
  site      Site
}

model Link {
  id               String   @default(cuid()) @id @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  page             Page
  href             String
  affiliateTagged  Boolean?
  affiliateTagName String?
  product          Product?
  anchorText       String?
}

model Product {
  id           String        @default(cuid()) @id @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String?
  asin         String        @unique
  links        Link[]
  availability Availability?
}

model Report {
  id        String   @default(cuid()) @id @unique
  createdAt DateTime @default(now())
  fileUrl   String?  @unique
  domain    String
  userSite  UserSite
}

enum Availability {
  AMAZON
  THIRDPARTY
  UNAVAILABLE
  NOTFOUND
}