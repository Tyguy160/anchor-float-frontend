# import * from './generated/prisma.graphql'

type Mutation {
  #------------------- User Mutations ------------------#

  """
  Signs up a new user
  """
  signup(name: String!, email: String!, password: String!): User!

  # TODO: Update a user

  """
  Delete a user ðŸ’£
  """
  deleteUser(id: ID!): User!

  #------------------- Domain Mutations ------------------#

  """
  Add a domain to the users domain list
  """
  addDomain(
    hostname: String!
    sitemapUrl: String
    pages: PageCreateManyInput
  ): Domain!

  # TODO: Update a domain

  """
  Delete a domain ðŸ’£
  """
  deleteDomain(id: ID!): Domain!

  #------------------- Page Mutations ------------------#

  """
  Create a page
  """
  createPage(url: String!, pageName: String!): Page!

  # TODO: Update a page

  """
  Delete a page ðŸ’£
  """
  deletePage(id: ID!): Page!

  #------------------- Link Mutations ------------------#

  """
  Create a link
  """
  createLink(
    url: String!
    affiliateTagged: Boolean!
    affiliateTagName: String
    product: ProductCreateOneWithoutLinksInput
    pages: PageCreateManyWithoutLinksInput
  ): Link!

  # TODO: Update a link

  """
  Delete a link ðŸ’£
  """
  deleteLink(id: ID!): Link!

  #------------------- Product Mutations ------------------#

  """
  Create a product
  """
  createProduct(
    name: String!
    asin: String!
    links: LinkCreateManyWithoutProductInput
  ): Product!

  # TODO: Update a product

  """
  Delete a product ðŸ’£
  """
  deleteProduct(id: ID!): Product!

  #-----------------------------------------------------#
}

type Query {
  users: [User]!
  user(where: UserWhereUniqueInput!): User

  domains: [Domain]!
  domain(where: DomainWhereUniqueInput!): Domain

  pages: [Page]!
  page(where: PageWhereUniqueInput!): Page

  links: [Link]!
  link(where: LinkWhereUniqueInput!): Link

  products: [Product]!
  product(where: ProductWhereUniqueInput!): Product
}
